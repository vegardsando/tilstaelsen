# 301 Redirect URLs with trailing /'s as per https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html
rewrite ^/(.*)/$ /$1 permanent;

# Change // -> / for all URLs, so it works for our php location block, too
merge_slashes off;
rewrite (.*)//+(.*) $1/$2 permanent;

# For WordPress bots/users
location ~ ^/(wp-login|wp-admin|wp-config|(.*)\.exe) {
	return 301 https://wordpress.com/wp-login.php;
}

# Enable Gzip compressed.
  gzip on;

# Enable compression both for HTTP/1.0 and HTTP/1.1.
  gzip_http_version  1.1;

# Compression level (1-9).
# 5 is a perfect compromise between size and cpu usage, offering about
# 75% reduction for most ascii files (almost identical to level 9).
  gzip_comp_level    5;

# Don't compress anything that's already small and unlikely to shrink much
# if at all (the default is 20 bytes, which is bad as that usually leads to
# larger files after gzipping).
  gzip_min_length    256;

# Compress data even for clients that are connecting to us via proxies,
# identified by the "Via" header (required for CloudFront).
  gzip_proxied       any;

# Tell proxies to cache both the gzipped and regular version of a resource
# whenever the client's Accept-Encoding capabilities header varies;
# Avoids the issue where a non-gzip capable client (which is extremely rare
# today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary          on;

# Compress all output labeled with one of the following MIME-types.
gzip_types
	application/atom+xml
	application/javascript
	application/json
	application/ld+json
	application/manifest+json
	application/rss+xml
	application/vnd.geo+json
	application/vnd.ms-fontobject
	application/x-font-ttf
	application/x-web-app-manifest+json
	application/xhtml+xml
	application/xml
	font/opentype
	image/bmp
	image/svg+xml
	image/x-icon
	text/cache-manifest
	text/css
	text/plain
	text/vcard
	text/vnd.rim.location.xloc
	text/vtt
	text/x-component
	text/x-cross-domain-policy;
	# text/html is always compressed by HttpGzipModule
# end gzip configuration


# Add Content-Security-Policy HTTP response header. Helps reduce XSS risks on
# modern browsers by declaring what dynamic resources are allowed to load via a
# HTTP Header.  See https://content-security-policy.com/
# Uncomment this only if you know what you're doing; it will need tweaking
#dd_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'" always;

location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
	deny all;
}

# cache.appcache, your document html and data
location ~* \.(?:manifest|appcache|html?|json)$ {
	expires -1;
	access_log /var/log/nginx/static.log;
}

# Feed
location ~* \.(?:rss|atom)$ {
	expires 1h;
	add_header Cache-Control "public";
}

# Media: images, icons, video, audio, HTC
location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
	#error_page 404 /404.html;
	expires 1M;
	access_log off;
	add_header Cache-Control "public";
}

# CSS and Javascript
location ~* \.(?:css|js)$ {
	expires 1y;
	access_log off;
	add_header Cache-Control "public";
}

# WebFonts
location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
	add_header "Access-Control-Allow-Origin" "*";
	expires 1M;
	access_log off;
	add_header Cache-Control "public";
 }

# Allow LetsEncrypt to verify this domain // denne fucker opp forge
# location ~ /.well-known {
# 	allow all;
# }

location / {
	try_files $uri $uri/ /index.php?$query_string;
}

# location / {
#     try_files $uri/ $uri/ @rewrites;
# }
#
# location @rewrites {
# 	rewrite ^(/en|no)?/(.*)$ $1/index.php?p=$2&$args? last;
# }

location ^~ /admin {
	try_files $uri $uri/ /index.php?$query_string;
}

 location ^~ /cpresources {
	try_files $uri $uri/ /index.php?$query_string;
}

location ~ [^/]\.php(/|$) {
	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	fastcgi_index index.php;
	include fastcgi_params;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	fastcgi_param PATH_INFO $fastcgi_path_info;
	fastcgi_param HTTP_PROXY "";

	fastcgi_intercept_errors off;
	fastcgi_buffer_size 16k;
	fastcgi_buffers 4 16k;
	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
}

# Disable reading of Apache .htaccess files
location ~ /\.ht {
	deny all;
}

client_max_body_size 20m;
